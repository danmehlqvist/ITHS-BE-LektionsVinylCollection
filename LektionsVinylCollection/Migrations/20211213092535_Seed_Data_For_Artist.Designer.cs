// <auto-generated />
using System;
using LektionsVinylCollection.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LektionsVinylCollection.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211213092535_Seed_Data_For_Artist")]
    partial class Seed_Data_For_Artist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LektionsVinylCollection.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FavoriteCar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 12, 13, 10, 25, 35, 660, DateTimeKind.Local).AddTicks(6616),
                            FavoriteCar = "Car 1",
                            Name = "Artist 1"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 12, 13, 10, 25, 35, 660, DateTimeKind.Local).AddTicks(6656),
                            FavoriteCar = "Car 2",
                            Name = "Artist 2"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 12, 13, 10, 25, 35, 660, DateTimeKind.Local).AddTicks(6658),
                            FavoriteCar = "Car 3",
                            Name = "Artist 3"
                        });
                });

            modelBuilder.Entity("LektionsVinylCollection.Entities.Vinyl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArtistID");

                    b.ToTable("Vinyls");
                });

            modelBuilder.Entity("LektionsVinylCollection.Entities.Vinyl", b =>
                {
                    b.HasOne("LektionsVinylCollection.Entities.Artist", "Artist")
                        .WithMany("Vinyls")
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("LektionsVinylCollection.Entities.Artist", b =>
                {
                    b.Navigation("Vinyls");
                });
#pragma warning restore 612, 618
        }
    }
}
